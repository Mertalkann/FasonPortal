@model FasonPortal.Models.IsEmriViewModel

@{
    ViewData["Title"] = "Yeni İş Talebi Oluştur";
    Layout = "_Layout";
}

<div class="createbody mt-10">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card bg-dark text-light shadow-lg rounded-3">
                <div class="card-header text-center bg-dark text-white rounded-top-3">
                    <h2>Yeni İş Talebi Oluştur</h2>
                </div>
                <div class="card-body bg-dark text-white rounded-bottom-3">
                    <form asp-action="Create" method="post">
                        @Html.AntiForgeryToken()

                        <!-- İş Tipi Seçimi -->
                        <div class="form-group">
                            <label for="IsTipiId">İş Tipi</label>
                            <select class="form-control bg-secondary text-light border-light rounded-3" asp-for="IsTipiId" asp-items="ViewBag.IsTipleri" id="IsTipiId" required>
                                <option value="">İş Tipi Seçin</option>
                            </select>
                            @Html.ValidationMessageFor(m => m.IsTipiId, "", new { @class = "text-danger" })
                        </div>

                        <!-- Atölye Seçimi -->
                        <div class="form-group">
                            <label for="AtolyeId">Atölye</label>
                            <select class="form-control bg-secondary text-light border-light rounded-3" asp-for="AtolyeId" id="AtolyeId" required>
                                <option value="">Atölye Seçin</option>
                            </select>
                            @Html.ValidationMessageFor(m => m.AtolyeId, "", new { @class = "text-danger" })
                        </div>

                        <!-- Birim Fiyat -->
                        <div class="form-group mt-3">
                            <label for="BirimFiyat">Birim Fiyat</label>
                            <input type="number" step="0.01" class="form-control bg-secondary text-light border-light rounded-3" asp-for="BirimFiyat" id="BirimFiyat" readonly />
                        </div>

                        <!-- Adet -->
                        <div class="form-group mt-3">
                            <label for="Adet">Adet</label>
                            <input type="number" class="form-control bg-secondary text-light border-light rounded-3" asp-for="Adet" />
                            @Html.ValidationMessageFor(m => m.Adet, "", new { @class = "text-danger" })
                        </div>

                        <!-- Toplam Maliyet -->
                        <div class="form-group mt-3">
                            <label for="ToplamMaliyet">Toplam Maliyet</label>
                            <input type="text" class="form-control bg-secondary text-light border-light rounded-3" id="ToplamMaliyet" readonly />
                        </div>

                        <!-- Açıklama -->
                        <div class="form-group mt-3">
                            <label for="Aciklama">Açıklama</label>
                            <textarea class="form-control bg-secondary text-light border-light rounded-3" asp-for="Aciklama"></textarea>
                        </div>

                        <!-- Kaydet Butonu -->
                        <button type="submit" class="btn btn-primary mt-4 w-100">İş Talebini Oluştur</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // İş Tipi seçildiğinde ilgili atölyeleri yükle
            $('#IsTipiId').change(function () {
                var isTipiId = $(this).val();
                $.get('/Fabrika/GetAtolyelerByIsTipi', { isTipiId: isTipiId }, function (data) {
                    $('#AtolyeId').html('');
                    $('#AtolyeId').append('<option value="">Atölye Seçin</option>');
                    $.each(data, function (index, item) {
                        $('#AtolyeId').append('<option value="' + item.id + '">' + item.ad + '</option>');
                    });
                });
            });

            // Atölye seçildiğinde birim fiyatı yükle
            $('#AtolyeId').change(function () {
                var atolyeId = $(this).val();
                var isTipiId = $('#IsTipiId').val();
                $.get('/Fabrika/GetBirimFiyat', { atolyeId: atolyeId, isTipiId: isTipiId }, function (data) {
                    $('#BirimFiyat').val(data.birimFiyat);
                });
            });

            // Adet girildiğinde toplam maliyeti hesapla
            $('#Adet').on('input', function () {
                var adet = $(this).val();
                var birimFiyat = $('#BirimFiyat').val();
                var toplamMaliyet = adet * birimFiyat;
                $('#ToplamMaliyet').val(toplamMaliyet.toFixed(2) + ' TL');
            });
        });
    </script>
}

<style>
    .createbody {
        margin-top: 150px;
    }
    body {
        background-color: #121212;
    }
    .card {
        background-color: #2c2c2c;
    }
    .card-header {
        background-color: #2c2c2c;
        border-bottom: 1px solid #121212;
    }
    .card-body {
        background-color: #2c2c2c;
    }
    .form-control {
        background-color: #343a40;
        border: 1px solid #495057;
        color: #ffffff;
    }
    .form-control:focus {
        background-color: #343a40;
        color: #ffffff;
        box-shadow: 0 0 0 0.2rem #007bff;
    }
    .btn-primary:hover {
        background-color: #0056b3;
        border-color: #004085;
    }
</style>
